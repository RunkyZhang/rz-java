server:
  port: 7070

# spring
spring:
  application:
    name: ww-user-base
  main:
    allow-bean-definition-overriding: true
  # database
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/db_user?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2b8&allowMultiQueries=true
    username: root
    password: 12345678
  # config center：读取nacos中命名空间为dev的ww-user-base.properties和redis.properties
  cloud:
    sentinel:
      transport:
        dashboard: localhost:8080
      datasource:
        # 限流配置保存在nacos中，"flowLimiting"为配置文件key可以随便定义
        flowLimiting:
          nacos:
            server-addr: localhost:8848
            dataId: ww-user-base-flowLimiting-sentinel.json
            groupId: DEFAULT_GROUP
            namespace: dev
            data_type: json
            rule-type: flow
    nacos:
      discovery:
        server-addr: localhost:8848
      config:
        server-addr: localhost:8848
        file-extension: properties
        namespace: dev
        extension-configs[0]:
          data-id: redis.properties
          group: DEFAULT_GROUP
          refresh: true


# mybatis
mybatis:
  mapper-locations[0]: classpath*:mapper/**/*.xml

# feign
feign:
  client:
    config:
      default: # default全局的配置
        loggerLevel: BASIC # 日志级别，BASIC就是基本的请求和响应信息
  httpclient:
    enabled: true # 开启feign对HttpClient的支持。原http调用工具无线程池性能低
    max-connections: 200 # 最大的连接数
    max-connections-per-route: 50 # 每个路径的最大连接数

# swagger。默认关闭，在nacos中开启
swagger:
  enable: false

# wangwang
#  cloud:
#    nacos:
#      username: nacos
#      password: crNbULLpCuhB9YeB
#      discovery:
#        server-addr: 47.101.54.47:8848
#      config:
#        server-addr: 47.101.54.47:8848
#        file-extension: properties
#        namespace: dev
#        extension-configs[0]:
#          data-id: redis.properties
#          group: DEFAULT_GROUP
#          refresh: true


# sentinel的配置保存在nacos中通过datasource配置。dataId: ww-user-base-flowLimiting-sentinel.json配置文件配置了api限流
# 限流
#    "resource": "DemoController.getConfig", // 资源名称
#    "limitApp": "default", // 针对来源：default就可以
#    "grade": 1, // 阈值类型：0是线程，1是QPS
#    "count": 3, // 阈值
#    "clusterMode": false, // 是否集群
#    "strategy": 0, // 流控模式：0是直接，1是关联，2是链接
#    "controlBehavior": 0 // 流控效果：0是直接，1是warm up，2是排队


# 熔断
#